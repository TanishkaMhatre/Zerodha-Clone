{"ast":null,"code":"require('dotenv').config();\nconst express = require('express');\nconst mongoose = require('mongoose');\nconst {\n  HoldingsModel\n} = require('./model/HoldingsModel');\nconst {\n  PositionsModel\n} = require('./model/PositionsModel');\nconst {\n  OrdersModel\n} = require('./model/OrdersModel'); // Order model added\n\nconst PORT = process.env.PORT || 3002;\nconst uri = process.env.MONGO_URL;\nconst app = express();\n\n// Middleware to parse JSON bodies in POST requests\napp.use(express.json());\n\n// --------------------------------------\n// API to add dummy holdings to DB\n// --------------------------------------\napp.get('/addHoldings', async (req, res) => {\n  const tempHoldings = [{\n    name: \"BHARTIARTL\",\n    qty: 2,\n    avg: 538.05,\n    price: 541.15,\n    net: \"+0.58%\",\n    day: \"+2.99%\"\n  }, {\n    name: \"HDFCBANK\",\n    qty: 2,\n    avg: 1383.4,\n    price: 1522.35,\n    net: \"+10.04%\",\n    day: \"+0.11%\"\n  }, {\n    name: \"HINDUNILVR\",\n    qty: 1,\n    avg: 2335.85,\n    price: 2417.4,\n    net: \"+3.49%\",\n    day: \"+0.21%\"\n  }, {\n    name: \"INFY\",\n    qty: 1,\n    avg: 1350.5,\n    price: 1555.45,\n    net: \"+15.18%\",\n    day: \"-1.60%\",\n    isLoss: true\n  }, {\n    name: \"ITC\",\n    qty: 5,\n    avg: 202.0,\n    price: 207.9,\n    net: \"+2.92%\",\n    day: \"+0.80%\"\n  }, {\n    name: \"KPITTECH\",\n    qty: 5,\n    avg: 250.3,\n    price: 266.45,\n    net: \"+6.45%\",\n    day: \"+3.54%\"\n  }, {\n    name: \"M&M\",\n    qty: 2,\n    avg: 809.9,\n    price: 779.8,\n    net: \"-3.72%\",\n    day: \"-0.01%\",\n    isLoss: true\n  }, {\n    name: \"RELIANCE\",\n    qty: 1,\n    avg: 2193.7,\n    price: 2112.4,\n    net: \"-3.71%\",\n    day: \"+1.44%\"\n  }, {\n    name: \"SBIN\",\n    qty: 4,\n    avg: 324.35,\n    price: 430.2,\n    net: \"+32.63%\",\n    day: \"-0.34%\",\n    isLoss: true\n  }, {\n    name: \"SGBMAY29\",\n    qty: 2,\n    avg: 4727.0,\n    price: 4719.0,\n    net: \"-0.17%\",\n    day: \"+0.15%\"\n  }, {\n    name: \"TATAPOWER\",\n    qty: 5,\n    avg: 104.2,\n    price: 124.15,\n    net: \"+19.15%\",\n    day: \"-0.24%\",\n    isLoss: true\n  }, {\n    name: \"TCS\",\n    qty: 1,\n    avg: 3041.7,\n    price: 3194.8,\n    net: \"+5.03%\",\n    day: \"-0.25%\",\n    isLoss: true\n  }, {\n    name: \"WIPRO\",\n    qty: 4,\n    avg: 489.3,\n    price: 577.75,\n    net: \"+18.08%\",\n    day: \"+0.32%\"\n  }];\n  try {\n    // Save each holding one by one\n    for (const item of tempHoldings) {\n      const newHolding = new HoldingsModel({\n        name: item.name,\n        qty: item.qty,\n        avg: item.avg,\n        price: item.price,\n        net: item.net,\n        day: item.day,\n        isLoss: item.isLoss || false\n      });\n      await newHolding.save();\n    }\n    res.send('Holdings saved to DB');\n  } catch (err) {\n    console.error('Error saving holdings:', err);\n    res.status(500).send('Failed to save holdings');\n  }\n});\n\n// --------------------------------------\n// API to fetch all holdings\n// --------------------------------------\napp.get('/allHoldings', async (req, res) => {\n  try {\n    const allHoldings = await HoldingsModel.find({});\n    res.json(allHoldings);\n  } catch (err) {\n    console.error('Error fetching holdings:', err);\n    res.status(500).send('Failed to fetch holdings');\n  }\n});\n\n// --------------------------------------\n// API to fetch all positions\n// --------------------------------------\napp.get('/allPositions', async (req, res) => {\n  try {\n    const allPositions = await PositionsModel.find({});\n    res.json(allPositions);\n  } catch (err) {\n    console.error('Error fetching positions:', err);\n    res.status(500).send('Failed to fetch positions');\n  }\n});\n\n// --------------------------------------\n// API to create a new order\n// --------------------------------------\napp.post('/newOrder', async (req, res) => {\n  try {\n    const {\n      name,\n      qty,\n      price,\n      mode\n    } = req.body;\n\n    // Create and save a new order\n    const newOrder = new OrdersModel({\n      name,\n      qty,\n      price,\n      mode\n    });\n    await newOrder.save();\n    res.status(201).send('Order added successfully');\n  } catch (err) {\n    console.error('Error adding order:', err);\n    res.status(500).send('Failed to add order');\n  }\n});\n\n// --------------------------------------\n// Start server and connect to DB\n// --------------------------------------\napp.listen(PORT, () => {\n  console.log(`App started on port ${PORT}`);\n  mongoose.connect(uri).then(() => console.log('DB connected')).catch(err => console.log('DB connection error:', err));\n});","map":{"version":3,"names":["require","config","express","mongoose","HoldingsModel","PositionsModel","OrdersModel","PORT","process","env","uri","MONGO_URL","app","use","json","get","req","res","tempHoldings","name","qty","avg","price","net","day","isLoss","item","newHolding","save","send","err","console","error","status","allHoldings","find","allPositions","post","mode","body","newOrder","listen","log","connect","then","catch"],"sources":["/Users/tanishkamhatre/Desktop/Zerodha/dashboard/src/data/data.js"],"sourcesContent":["require('dotenv').config();\n\nconst express = require('express');\nconst mongoose = require('mongoose');\nconst { HoldingsModel } = require('./model/HoldingsModel');\nconst { PositionsModel } = require('./model/PositionsModel');\nconst { OrdersModel } = require('./model/OrdersModel'); // Order model added\n\nconst PORT = process.env.PORT || 3002;\nconst uri = process.env.MONGO_URL;\n\nconst app = express();\n\n// Middleware to parse JSON bodies in POST requests\napp.use(express.json());\n\n// --------------------------------------\n// API to add dummy holdings to DB\n// --------------------------------------\napp.get('/addHoldings', async (req, res) => {\n    const tempHoldings = [\n        {\n            name: \"BHARTIARTL\",\n            qty: 2,\n            avg: 538.05,\n            price: 541.15,\n            net: \"+0.58%\",\n            day: \"+2.99%\",\n        },\n        {\n            name: \"HDFCBANK\",\n            qty: 2,\n            avg: 1383.4,\n            price: 1522.35,\n            net: \"+10.04%\",\n            day: \"+0.11%\",\n        },\n        {\n            name: \"HINDUNILVR\",\n            qty: 1,\n            avg: 2335.85,\n            price: 2417.4,\n            net: \"+3.49%\",\n            day: \"+0.21%\",\n        },\n        {\n            name: \"INFY\",\n            qty: 1,\n            avg: 1350.5,\n            price: 1555.45,\n            net: \"+15.18%\",\n            day: \"-1.60%\",\n            isLoss: true,\n        },\n        {\n            name: \"ITC\",\n            qty: 5,\n            avg: 202.0,\n            price: 207.9,\n            net: \"+2.92%\",\n            day: \"+0.80%\",\n        },\n        {\n            name: \"KPITTECH\",\n            qty: 5,\n            avg: 250.3,\n            price: 266.45,\n            net: \"+6.45%\",\n            day: \"+3.54%\",\n        },\n        {\n            name: \"M&M\",\n            qty: 2,\n            avg: 809.9,\n            price: 779.8,\n            net: \"-3.72%\",\n            day: \"-0.01%\",\n            isLoss: true,\n        },\n        {\n            name: \"RELIANCE\",\n            qty: 1,\n            avg: 2193.7,\n            price: 2112.4,\n            net: \"-3.71%\",\n            day: \"+1.44%\",\n        },\n        {\n            name: \"SBIN\",\n            qty: 4,\n            avg: 324.35,\n            price: 430.2,\n            net: \"+32.63%\",\n            day: \"-0.34%\",\n            isLoss: true,\n        },\n        {\n            name: \"SGBMAY29\",\n            qty: 2,\n            avg: 4727.0,\n            price: 4719.0,\n            net: \"-0.17%\",\n            day: \"+0.15%\",\n        },\n        {\n            name: \"TATAPOWER\",\n            qty: 5,\n            avg: 104.2,\n            price: 124.15,\n            net: \"+19.15%\",\n            day: \"-0.24%\",\n            isLoss: true,\n        },\n        {\n            name: \"TCS\",\n            qty: 1,\n            avg: 3041.7,\n            price: 3194.8,\n            net: \"+5.03%\",\n            day: \"-0.25%\",\n            isLoss: true,\n        },\n        {\n            name: \"WIPRO\",\n            qty: 4,\n            avg: 489.3,\n            price: 577.75,\n            net: \"+18.08%\",\n            day: \"+0.32%\",\n        },\n    ];\n\n    try {\n        // Save each holding one by one\n        for (const item of tempHoldings) {\n            const newHolding = new HoldingsModel({\n                name: item.name,\n                qty: item.qty,\n                avg: item.avg,\n                price: item.price,\n                net: item.net,\n                day: item.day,\n                isLoss: item.isLoss || false,\n            });\n\n            await newHolding.save();\n        }\n\n        res.send('Holdings saved to DB');\n    } catch (err) {\n        console.error('Error saving holdings:', err);\n        res.status(500).send('Failed to save holdings');\n    }\n});\n\n// --------------------------------------\n// API to fetch all holdings\n// --------------------------------------\napp.get('/allHoldings', async (req, res) => {\n    try {\n        const allHoldings = await HoldingsModel.find({});\n        res.json(allHoldings);\n    } catch (err) {\n        console.error('Error fetching holdings:', err);\n        res.status(500).send('Failed to fetch holdings');\n    }\n});\n\n// --------------------------------------\n// API to fetch all positions\n// --------------------------------------\napp.get('/allPositions', async (req, res) => {\n    try {\n        const allPositions = await PositionsModel.find({});\n        res.json(allPositions);\n    } catch (err) {\n        console.error('Error fetching positions:', err);\n        res.status(500).send('Failed to fetch positions');\n    }\n});\n\n// --------------------------------------\n// API to create a new order\n// --------------------------------------\napp.post('/newOrder', async (req, res) => {\n    try {\n        const { name, qty, price, mode } = req.body;\n\n        // Create and save a new order\n        const newOrder = new OrdersModel({ name, qty, price, mode });\n        await newOrder.save();\n\n        res.status(201).send('Order added successfully');\n    } catch (err) {\n        console.error('Error adding order:', err);\n        res.status(500).send('Failed to add order');\n    }\n});\n\n// --------------------------------------\n// Start server and connect to DB\n// --------------------------------------\napp.listen(PORT, () => {\n    console.log(`App started on port ${PORT}`);\n    mongoose.connect(uri)\n        .then(() => console.log('DB connected'))\n        .catch((err) => console.log('DB connection error:', err));\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}